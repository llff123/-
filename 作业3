1.CPU使用率
                怎么查看CPU使用率（掌握）
                怎么定位CPU使用率过高的问题（掌握）
  描述系统的CPU性能的常用指标：CPU使用率
  
  top命令的数据来源于哪里?--cat /proc/stat |grep ^cpu(^cpu表示查找以cpu打头的数据)
               us   ni   sy     id    iowait irp sirp
        cpu  669312 39 379948 8801890 106251 0 2277 0 0 0
        cpu0 145147 8 94798 2223569 26695 0 539 0 0 0
        cpu1 163417 18 93282 2207199 25316 0 509 0 0 0
        cpu2 151055 7 95706 2219287 22511 0 532 0 0 0
        cpu3 209692 6 96161 2151834 31727 0 695 0 0 0
  us：从系统启动开始累积到当前时间，处于用户态的运行时间，不包括nice值为负的进程
  sy：从系统启动开始累积到当前时间，处于系统态的运行时间
  id：除I/O等待时间以外的其他时间
  iowait：I/O等待的时间
  irq：硬中断时间
  sirp：软中断时间
  
2.项目实战
  1.解压并安装tomcat
  2.将Java项目放在webapps目录下，然后启动tomcat，查看http://192.168.229.130:8080/JvmPertest/PerThreadTest
  3.jmeter工具新建jpgc线程组，主要观察聚合报告里的平均响应时间和吞吐量两列数据
    实战项目 223	11702	4146	36818	43545	50663	17	80516	0.17937219730941703	1.8591234608041751	1.1530942317151456	0.2175240883625541
    总体	   223	11702	4146	36818	43545	50663	17	80516	0.17937219730941703	1.8591234608041751	1.1530942317151456	0.2175240883625541
      --发现响应时间越来越长（超过11s），同时吞吐量越来越低（1.9/sec）
  4.这时，需优先排除网络是否到达瓶颈----直接ping被测服务器
    来自 192.168.229.130 的回复: 字节=32 时间<1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间=1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间<1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间<1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间<1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间=1ms TTL=64
    来自 192.168.229.130 的回复: 字节=32 时间<1ms TTL=64
          可发现响应时间基本上<=1ms，说明网络没有瓶颈
  5.排除网络瓶颈之后，再来服务器查看数据：top
      top - 18:18:21 up  7:25,  4 users,  load average: 294.17, 181.29, 86.54
    Tasks: 192 total,   1 running, 116 sleeping,   0 stopped,   0 zombie
    %Cpu0  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st（以下几行数据重点关注）
    %Cpu1  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
    %Cpu2  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
    %Cpu3  :100.0 us,  0.0 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
    KiB Mem :  2007880 total,   927428 free,   738820 used,   341632 buff/cache
    KiB Swap:  2097148 total,  2097148 free,        0 used.  1089652 avail Mem 

       PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                            
     12435 root      20   0 5302456 399276  17032 S 399.0 19.9  39:44.27 java                               
      1249 root      20   0  216440   7604   5924 S   0.3  0.4   0:01.70 rsyslogd
      -----------------发现用户态占用CPU达100%，说明是用户进程导致了平均负载的增加
  6.使用pidstat -wt 3去查看线程数据，发现java的子线程数量非常多，累计到一起占用大量CPU。
          
